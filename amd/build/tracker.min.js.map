{"version":3,"sources":["../src/tracker.js"],"names":["define","$","Timer","InactivityTimer","Ajax","Log","Tracker","sessionId","settings","timer","inactivityTimer","prototype","addElapsedTime","elapsedTime","call","methodname","args","sessionid","elapsedtime","start","debug","interval","console","log","on","ticks","getTicks","idlethreshold","sessiontimeout","sessiontimeoutwarnthreshold","init","pause","logout"],"mappings":"AAeAA,OAAM,+BAAC,CAAC,QAAD,CAAW,2BAAX,CAAwC,sCAAxC,CAAgF,WAAhF,CAA6F,UAA7F,CAAD,CACF,SAASC,CAAT,CAAYC,CAAZ,CAAmBC,CAAnB,CAAoCC,CAApC,CAA0CC,CAA1C,CAA+C,CAE/C,GAAIC,CAAAA,CAAO,CAAG,SAASC,CAAT,CAAoBC,CAApB,CAA8B,CACxC,KAAKC,KAAL,CAAa,IAAb,CACA,KAAKC,eAAL,CAAuB,IAAvB,CACA,KAAKH,SAAL,CAAiBA,CAAjB,CACA,KAAKC,QAAL,CAAgBA,CACnB,CALD,CAaAF,CAAO,CAACK,SAAR,CAAkBC,cAAlB,CAAmC,SAASC,CAAT,CAAsB,CACrD,MAAOT,CAAAA,CAAI,CAACU,IAAL,CAAU,CAAC,CACdC,UAAU,CAAE,sCADE,CACsCC,IAAI,CAAE,CACtDC,SAAS,CAAE,KAAKV,SADsC,CAEtDW,WAAW,CAAEL,CAFyC,CAD5C,CAAD,CAAV,EAKH,CALG,CAMV,CAPD,CASAP,CAAO,CAACK,SAAR,CAAkBQ,KAAlB,CAA0B,UAAW,YAEjCd,CAAG,CAACe,KAAJ,CAAU,oBAAV,EAEA,GAAMC,CAAAA,CAAQ,CAAG,KAAKb,QAAL,CAAca,QAA/B,CAEAC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwB,KAAKf,QAA7B,EAEA,KAAKC,KAAL,CAAa,GAAIP,CAAAA,CAAJ,CAAU,GAAV,CAAb,CACA,KAAKO,KAAL,CAAWU,KAAX,GAEAlB,CAAC,CAAC,KAAKQ,KAAN,CAAD,CAAce,EAAd,CAAiB,YAAjB,CAA+B,UAAM,CACjC,GAAMC,CAAAA,CAAK,CAAG,CAAI,CAAChB,KAAL,CAAWiB,QAAX,EAAd,CAEArB,CAAG,CAACe,KAAJ,CAAU,eAAV,EAEA,GAAyB,CAArB,EAAAK,CAAK,CAAGJ,CAAZ,CAA4B,CACxBhB,CAAG,CAACe,KAAJ,CAAU,6BAA+BC,CAAzC,EACA,CAAI,CAACT,cAAL,CAAoBS,CAApB,CACH,CACJ,CATD,EAWA,KAAKX,eAAL,CAAuB,GAAIP,CAAAA,CAAJ,CACW,GAA9B,MAAKK,QAAL,CAAcmB,aADK,CAEnB,KAAKnB,QAAL,CAAcoB,cAFK,CAGnB,KAAKpB,QAAL,CAAcqB,2BAHK,CAAvB,CAIA,KAAKnB,eAAL,CAAqBoB,IAArB,GAGA7B,CAAC,CAAC,KAAKS,eAAN,CAAD,CAAwBc,EAAxB,CAA2B,UAA3B,CAAuC,UAAM,CACzC,CAAI,CAACf,KAAL,CAAWsB,KAAX,EACH,CAFD,EAKA9B,CAAC,CAAC,KAAKS,eAAN,CAAD,CAAwBc,EAAxB,CAA2B,QAA3B,CAAqC,UAAM,CACvC,CAAI,CAACf,KAAL,CAAWU,KAAX,EACH,CAFD,EAKAlB,CAAC,CAAC,KAAKS,eAAN,CAAD,CAAwBc,EAAxB,CAA2B,iBAA3B,CAA8C,UAAM,CAChD,CAAI,CAACd,eAAL,CAAqBsB,MAArB,EACH,CAFD,CAGH,CA1CD,CA4CA,MAAO1B,CAAAA,CACV,CAtEK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\ndefine(['jquery', 'local_time_tracking/timer', 'local_time_tracking/inactivity_timer', 'core/ajax', 'core/log'],\n    function($, Timer, InactivityTimer, Ajax, Log) {\n\n    let Tracker = function(sessionId, settings) {\n        this.timer = null;\n        this.inactivityTimer = null;\n        this.sessionId = sessionId;\n        this.settings = settings;\n    };\n\n    /**\n     * Add elapsed time to user session.\n     *\n     * @param {int} elapsedTime\n     * @returns {Promise}\n     */\n    Tracker.prototype.addElapsedTime = function(elapsedTime) {\n        return Ajax.call([{\n            methodname: 'local_time_tracking_add_elapsed_time', args: {\n                sessionid: this.sessionId,\n                elapsedtime: elapsedTime\n            }\n        }])[0];\n    };\n\n    Tracker.prototype.start = function() {\n\n        Log.debug('TIME_TRACKER: Init');\n\n        const interval = this.settings.interval;\n\n        console.log(\"SETTINGS\", this.settings);\n\n        this.timer = new Timer(1000);\n        this.timer.start();\n\n        $(this.timer).on('timer.tick', () => {\n            const ticks = this.timer.getTicks();\n\n            Log.debug('TRACKER: Tick');\n\n            if (ticks % interval === 0) {\n                Log.debug('TRACKER: Add elapsed time ' + interval);\n                this.addElapsedTime(interval);\n            }\n        });\n\n        this.inactivityTimer = new InactivityTimer(\n            this.settings.idlethreshold * 1000,\n            this.settings.sessiontimeout,\n            this.settings.sessiontimeoutwarnthreshold);\n        this.inactivityTimer.init();\n\n        // When user goes inactive, stop tracking time.\n        $(this.inactivityTimer).on('inactive', () => {\n            this.timer.pause();\n        });\n\n        // When a user becomes active, continue tracking time.\n        $(this.inactivityTimer).on('active', () => {\n            this.timer.start();\n        });\n\n        // If user is inactive for too long log them out.\n        $(this.inactivityTimer).on('session_timeout', () => {\n            this.inactivityTimer.logout();\n        });\n    };\n\n    return Tracker;\n});"],"file":"tracker.min.js"}