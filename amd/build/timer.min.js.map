{"version":3,"sources":["../src/timer.js"],"names":["define","$","Timer","interval","limit","internalTimer","ticks","done","prototype","start","self","trigger","clearInterval","setInterval","tick","pause","stop","getTicks","getRemainingTicks","remain","isCompleted"],"mappings":"AAeAA,OAAM,6BAAC,CAAC,QAAD,CAAD,CAAa,SAASC,CAAT,CAAY,CAE3B,GAAIC,CAAAA,CAAK,CAAG,SAASC,CAAT,CAAmBC,CAAnB,CAA0B,CAClC,GAAI,CAACD,CAAL,CAAe,CACXA,CAAQ,CAAG,GACd,CACD,GAAI,CAACC,CAAL,CAAY,CACRA,CAAK,CAAG,CACX,CACD,KAAKD,QAAL,CAAgBA,CAAhB,CACA,KAAKC,KAAL,CAAaA,CAAb,CACA,KAAKC,aAAL,CAAqB,IAArB,CACA,KAAKC,KAAL,CAAa,CAAb,CACA,KAAKC,IAAL,GACH,CAZD,CAcAL,CAAK,CAACM,SAAN,CAAgBC,KAAhB,CAAwB,UAAW,CAC/B,GAAIC,CAAAA,CAAI,CAAG,IAAX,CACAA,CAAI,CAACH,IAAL,IACAN,CAAC,CAAC,IAAD,CAAD,CAAQU,OAAR,CAAgB,aAAhB,EAEA,GAAI,KAAKN,aAAT,CAAwB,CACpBO,aAAa,CAAC,KAAKP,aAAN,CAChB,CACD,KAAKA,aAAL,CAAqBQ,WAAW,CAAC,UAAW,CACxCH,CAAI,CAACI,IAAL,EACH,CAF+B,CAE7BJ,CAAI,CAACP,QAFwB,CAGnC,CAXD,CAaAD,CAAK,CAACM,SAAN,CAAgBO,KAAhB,CAAwB,UAAW,CAC/Bd,CAAC,CAAC,IAAD,CAAD,CAAQU,OAAR,CAAgB,aAAhB,EACAC,aAAa,CAAC,KAAKP,aAAN,CAAb,CACAJ,CAAC,CAAC,IAAD,CAAD,CAAQU,OAAR,CAAgB,cAAhB,CACH,CAJD,CAMAT,CAAK,CAACM,SAAN,CAAgBQ,IAAhB,CAAuB,UAAW,CAC9Bf,CAAC,CAAC,IAAD,CAAD,CAAQU,OAAR,CAAgB,YAAhB,EACAC,aAAa,CAAC,KAAKP,aAAN,CAAb,CACA,KAAKC,KAAL,CAAa,CAAb,CACAL,CAAC,CAAC,IAAD,CAAD,CAAQU,OAAR,CAAgB,eAAhB,CACH,CALD,CAOAT,CAAK,CAACM,SAAN,CAAgBM,IAAhB,CAAuB,UAAW,CAC9B,KAAKR,KAAL,GACAL,CAAC,CAAC,IAAD,CAAD,CAAQU,OAAR,CAAgB,YAAhB,EACA,GAAiB,CAAb,MAAKP,KAAL,EAAkB,KAAKE,KAAL,EAAc,KAAKF,KAAzC,CAAgD,CAC5C,KAAKG,IAAL,IACA,KAAKS,IAAL,GACAf,CAAC,CAAC,IAAD,CAAD,CAAQU,OAAR,CAAgB,YAAhB,CACH,CACJ,CARD,CAUAT,CAAK,CAACM,SAAN,CAAgBS,QAAhB,CAA2B,UAAW,CAClC,MAAO,MAAKX,KACf,CAFD,CAIAJ,CAAK,CAACM,SAAN,CAAgBU,iBAAhB,CAAoC,UAAW,CAC3C,GAAIC,CAAAA,CAAM,CAAG,KAAKf,KAAL,CAAa,KAAKE,KAA/B,CACA,GAAa,CAAT,CAAAa,CAAJ,CAAgB,CACZ,MAAO,EACV,CACD,MAAOA,CAAAA,CACV,CAND,CAQAjB,CAAK,CAACM,SAAN,CAAgBY,WAAhB,CAA8B,UAAW,CACrC,MAAO,MAAKb,IACf,CAFD,CAIA,MAAOL,CAAAA,CACV,CArEK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\ndefine(['jquery'], function($) {\n\n    let Timer = function(interval, limit) {\n        if (!interval) {\n            interval = 1000;\n        }\n        if (!limit) {\n            limit = 0;\n        }\n        this.interval = interval;\n        this.limit = limit;\n        this.internalTimer = null;\n        this.ticks = 0;\n        this.done = false;\n    };\n\n    Timer.prototype.start = function() {\n        let self = this;\n        self.done = false;\n        $(this).trigger('timer.start');\n        // First clear out existing interval if it's already running.\n        if (this.internalTimer) {\n            clearInterval(this.internalTimer);\n        }\n        this.internalTimer = setInterval(function() {\n            self.tick();\n        }, self.interval);\n    };\n\n    Timer.prototype.pause = function() {\n        $(this).trigger('timer.pause');\n        clearInterval(this.internalTimer);\n        $(this).trigger('timer.paused');\n    };\n\n    Timer.prototype.stop = function() {\n        $(this).trigger('timer.stop');\n        clearInterval(this.internalTimer);\n        this.ticks = 0;\n        $(this).trigger('timer.stopped');\n    };\n\n    Timer.prototype.tick = function() {\n        this.ticks++;\n        $(this).trigger('timer.tick');\n        if (this.limit > 0 && this.ticks >= this.limit) {\n            this.done = true;\n            this.stop();\n            $(this).trigger('timer.done');\n        }\n    };\n\n    Timer.prototype.getTicks = function() {\n        return this.ticks;\n    };\n\n    Timer.prototype.getRemainingTicks = function() {\n        let remain = this.limit - this.ticks;\n        if (remain < 0) {\n            return 0;\n        }\n        return remain;\n    };\n\n    Timer.prototype.isCompleted = function() {\n        return this.done;\n    };\n\n    return Timer;\n});\n"],"file":"timer.min.js"}